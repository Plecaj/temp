#include <iostream>
#include <Windows.h>

namespace Config {
	static const int cartSize = 5;
	//TODO: consty do kolorow
}

namespace Console {
	void printColored(std::string text, int color) {
		HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(console, color);
		std::cout << text;
		SetConsoleTextAttribute(console, 7); // Reset color
	}
	void printColored(float num, int color) {
		HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(console, color);
		std::cout << num;
		SetConsoleTextAttribute(console, 7); // Reset color
	}
	void printColored(char character, int color) {
		HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(console, color);
		std::cout << character;
		SetConsoleTextAttribute(console, 7); // Reset color
	}
}

class Product {
public:
	Product() {}
	Product(std::string name, float price)
		:name(name), price(price) {}
public:
	std::string name;
	float price;
};

class Shop {
public:
	Shop()
		:m_shouldRun(true), m_index(0) {}
	void drawCart() {
		for (int i = 0; i < m_index; i++) {
			// Consty do kolorow!!!
			Console::printColored(m_products[i].name, 11);
			std::cout << "  ";
			Console::printColored(':', 15);
			std::cout << "  ";
			Console::printColored(m_products[i].price, 10);
			std::cout << "  ";
		}
		std::cout << std::endl;
	}
	bool addProduct(std::string name, float price) {
		Product product(name, price);
		m_products[m_index] = product;
		m_index++;
		return true;
	}
	void deleteProduct(int idx) {
		// TODO: Check for idx!
		m_products[idx] = m_products[m_index];
		m_index--;
	}
	void deleteWholeCart() {
		m_index = 0;
	}
	int pay(float payment) {
		deleteWholeCart();
		return 0;
	}
	bool dropSession() { m_shouldRun = false; }
	bool shouldRun() { return m_shouldRun; }
private:
	Product m_products[Config::cartSize];
	int m_index;
	bool m_shouldRun;
};


int main() {
	Shop shop;
	shop.addProduct("costam", 3.6f);
	shop.addProduct("inne", 8.9f);
	shop.addProduct("mleko", 10.3f);
	shop.drawCart();
	shop.deleteProduct(1);
	shop.drawCart();
	shop.deleteWholeCart();
	shop.drawCart();
}
